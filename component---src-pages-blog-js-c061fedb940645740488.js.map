{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Header.js","webpack:///./src/pages/blog.js"],"names":["Layout","children","query","render","data","siteTitle","site","siteMetadata","title","className","Footer","Date","getFullYear","to","Header","style","color","textDecoration","defaultProps","BlogPage","allMarkdownRemark","edges","map","index","node","frontmatter","path","date"],"mappings":"8KAiCeA,IAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAAC,cAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACV,oCACE,kBAAC,IAAD,CAAQC,UAAWD,EAAKE,KAAKC,aAAaC,QAC1C,yBAAKC,UAAU,kBAAkBR,GACjC,kBAAC,IAAD,QAdN,W,kCCTF,qCAgCeS,IA7BA,kBACb,gCACE,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wCACb,wBAAIA,UAAU,eACZ,kCAAO,IAAIE,MAAOC,eAClB,4BACE,kBAAC,OAAD,CAAMC,GAAG,KAAT,SAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,WAAT,YAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,gBAAT,iBAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,QAAT,SAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,MAAT,oB,sICvBd,qCAIMC,EAAS,SAAC,GAAD,IAAGT,EAAH,EAAGA,UAAH,OACb,gCACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kDACb,wBAAIA,UAAU,eACZ,kBAAC,OAAD,CACEI,GAAG,IACHE,MAAO,CACLC,MAAM,QACNC,eAAe,SAGhBZ,SAafS,EAAOI,aAAe,CACpBb,UAAU,IAGGS,O,kCClCf,8FA2BeK,UAvBE,SAAC,GAAD,IAAGf,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,KACE,6BACE,oCACA,6BACCA,EAAKgB,kBACFhB,EAAKgB,kBAAkBC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAC/B,yBAAKf,UAAU,OACb,yBAAKA,UAAU,wCACb,4BACE,kBAAC,OAAD,CAAMI,GAAE,GAAKW,EAAKC,YAAYC,MAC3BF,EAAKC,YAAYjB,QAGtB,2BAAIgB,EAAKC,YAAYE,WAI3B,QAOH,IAAMzB,EAAK","file":"component---src-pages-blog-js-c061fedb940645740488.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './Header'\nimport Footer from './Footer'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"main container\">{children}</div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\">\n          <ul className=\"text-center\">\n            <li>Â© {new Date().getFullYear()}</li>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"project\">Project</Link>\n            </li>\n            <li>\n              <Link to=\"the-notebook\">The Notebook</Link>\n            </li>\n            <li>\n              <Link to=\"blog\">Blog</Link>\n            </li>\n            <li>\n              <Link to=\"me\">About Me</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n          <h1 className=\"text-center\">\n            <Link\n              to=\"/\"\n              style={{\n                color: `white`,\n                textDecoration: `none`\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h1>\n        </div>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default Header\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst BlogPage = ({ data }) => (\n  <Layout>\n    <div>\n      <h1>Blog</h1>\n      <hr />\n      {data.allMarkdownRemark\n        ? data.allMarkdownRemark.edges.map(({ node }, index) => (\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n                <h5>\n                  <Link to={`${node.frontmatter.path}`}>\n                    {node.frontmatter.title}\n                  </Link>\n                </h5>\n                <p>{node.frontmatter.date}</p>\n              </div>\n            </div>\n          ))\n        : null}\n    </div>\n  </Layout>\n)\n\nexport default BlogPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"blog\" } } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n          }\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}