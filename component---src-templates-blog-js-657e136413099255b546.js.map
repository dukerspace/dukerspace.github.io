{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blog.js"],"names":["Header","siteTitle","className","to","style","color","textDecoration","defaultProps","Footer","Date","getFullYear","Layout","children","query","render","data","site","siteMetadata","title","post","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html"],"mappings":"6IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,gCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kDACb,wBAAIA,UAAU,eACZ,kBAAC,OAAD,CACEC,GAAG,IACHC,MAAO,CACLC,MAAM,QACNC,eAAe,SAGhBL,SAafD,EAAOO,aAAe,CACpBN,UAAU,IAGGD,QCFAQ,EA7BA,kBACb,gCACE,yBAAKN,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wCACb,4BACE,kCAAO,IAAIO,MAAOC,eAClB,4BACE,kBAAC,OAAD,CAAMP,GAAG,KAAT,SAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,WAAT,YAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,gBAAT,iBAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,QAAT,SAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,MAAT,mB,UCUCQ,IAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAAC,cAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACV,oCACE,kBAAC,EAAD,CAAQd,UAAWc,EAAKC,KAAKC,aAAaC,QAC1C,yBAAKhB,UAAU,kBAAkBU,GACjC,kBAAC,EAAD,QAdN,W,sICTF,kFAIe,sBAAe,IACtBO,EADqB,EAAXJ,KACEK,eAClB,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKD,EAAKE,YAAYH,OACtB,yBAAKI,wBAAyB,CAAEC,OAAQJ,EAAKK,WAM9C,IAAMX,EAAK","file":"component---src-templates-blog-js-657e136413099255b546.js","sourcesContent":["import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n          <h1 className=\"text-center\">\n            <Link\n              to=\"/\"\n              style={{\n                color: `white`,\n                textDecoration: `none`\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h1>\n        </div>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\">\n          <ul>\n            <li>Â© {new Date().getFullYear()}</li>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"project\">Project</Link>\n            </li>\n            <li>\n              <Link to=\"the-notebook\">The Notebook</Link>\n            </li>\n            <li>\n              <Link to=\"blog\">Blog</Link>\n            </li>\n            <li>\n              <Link to=\"me\">About Me</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"main container\">{children}</div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      frontmatter {\n        title\n        path\n        type\n      }\n      html\n    }\n  }\n`\n"],"sourceRoot":""}