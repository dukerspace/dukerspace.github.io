{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/pages/blog.js"],"names":["Header","siteTitle","className","to","style","color","textDecoration","defaultProps","Footer","Date","getFullYear","Layout","children","query","render","data","site","siteMetadata","title","BlogPage","allMarkdownRemark","edges","map","index","node","key","frontmatter","path","html"],"mappings":"4IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,gCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kDACb,wBAAIA,UAAU,eACZ,kBAAC,OAAD,CACEC,GAAG,IACHC,MAAO,CACLC,MAAM,QACNC,eAAe,SAGhBL,SAafD,EAAOO,aAAe,CACpBN,UAAU,IAGGD,QCFAQ,EA7BA,kBACb,gCACE,yBAAKN,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wCACb,4BACE,kCAAO,IAAIO,MAAOC,eAClB,4BACE,kBAAC,OAAD,CAAMP,GAAG,KAAT,SAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,WAAT,YAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,gBAAT,iBAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,QAAT,SAEF,4BACE,kBAAC,OAAD,CAAMA,GAAG,MAAT,mB,UCUCQ,IAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAAC,cAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACV,oCACE,kBAAC,EAAD,CAAQd,UAAWc,EAAKC,KAAKC,aAAaC,QAC1C,yBAAKhB,UAAU,kBAAkBU,GACjC,kBAAC,EAAD,QAdN,W,sICTF,8FAoCeO,UAhCE,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,KACE,6BACE,+CACA,+BACE,+BACE,4BACE,4CACA,0CACA,yCACA,2CAGJ,+BACGA,EAAKK,kBACFL,EAAKK,kBAAkBC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAC/B,wBAAIC,IAAKF,GACP,4BACE,kBAAC,OAAD,CAAMpB,GAAE,GAAKqB,EAAKE,YAAYC,MAC3BH,EAAKE,YAAYR,QAGtB,4BAAKM,EAAKI,UAGd,UASP,IAAMf,EAAK","file":"component---src-pages-blog-js-5bda38c35111e78885ec.js","sourcesContent":["import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n          <h1 className=\"text-center\">\n            <Link\n              to=\"/\"\n              style={{\n                color: `white`,\n                textDecoration: `none`\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h1>\n        </div>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-12 col-lg-12 col-md-12 col-12\">\n          <ul>\n            <li>Â© {new Date().getFullYear()}</li>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"project\">Project</Link>\n            </li>\n            <li>\n              <Link to=\"the-notebook\">The Notebook</Link>\n            </li>\n            <li>\n              <Link to=\"blog\">Blog</Link>\n            </li>\n            <li>\n              <Link to=\"me\">About Me</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"main container\">{children}</div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst BlogPage = ({ data }) => (\n  <Layout>\n    <div>\n      <h1>My Site's Files</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>relativePath</th>\n            <th>prettySize</th>\n            <th>extension</th>\n            <th>birthTime</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.allMarkdownRemark\n            ? data.allMarkdownRemark.edges.map(({ node }, index) => (\n                <tr key={index}>\n                  <td>\n                    <Link to={`${node.frontmatter.path}`}>\n                      {node.frontmatter.title}\n                    </Link>\n                  </td>\n                  <td>{node.html}</td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </table>\n    </div>\n  </Layout>\n)\n\nexport default BlogPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"blog\" } } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}